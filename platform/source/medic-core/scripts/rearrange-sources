#!/bin/bash

set -o pipefail
shopt -u xpg_echo

self="`readlink -f "$0" 2>/dev/null || realpath "$0"`"
base_dir="`dirname "$self"`/.."

source "$base_dir/../medic-core/scripts/include/rearrange"

rename()
{
  find . -type d -exec chmod 755 {} \; &&
    chown -R 0:0 . &&
   \
  for file in apache-*; do
    if [ -d "$file" ]; then
      mv "$file" "`echo "$file" | sed -E 's/^apache-//;'`";
    fi
  done &&
  \
  for file in otp_src*; do
    if [ -d "$file" ]; then
      mv "$file" "erlang-`
        echo "$file" | \
          sed -E 's/^otp_src_([^-]+).*$/\1/;' | tr '[A-Z]' '[a-z]'
      `";
    fi
  done &&
  \
  for pkg in rebar; do
    \
    if [ -d "$pkg" ]; then
      mv "$pkg" "`echo "$pkg" | tr '_' '-'`-devel";
    fi
  done &&
  \
  local version="`find_version node-v*.tar.*`" &&
  local source="`find * -prune -type d -name 'node-v*'`" &&
  mv "$source" "node-$version"
}

symlink()
{
  find * -prune -type d | while read dir; do
    ln -sf "$dir" "`echo "$dir" | sed -E 's/-[0-9\.a-z]+$//;'`"
  done &&
  \
  for dir in logs stats images; do
    ln -sf "../$dir" "$dir";
  done
  
}

apply_patches()
{
  (cd couchdb && patch -s -p1 \
    < ../../patches/couchdb2-dependency-prefix.diff) &&
  (cd erlang && patch -s -p1 \
    < ../../patches/erlang-r17-pcre-fix.diff) &&
  (  local js_target="`readlink firefox`" && \
  rm -f firefox && ln -sf "$js_target/js/src" js)

}

enforce_minimum_size()
{
  local bytes="$1"
  local file="$2"

  if [ "`wc -c < "$file"`" -ge "$bytes" ]; then
    return 0
  fi

  echo "File '$file' is below $bytes byte limit; likely corrupted" >&2
  return 1
}

finished_path="$base_dir/../../status/medic-core.finished"

if [ -f "$finished_path" ]; then
  echo "Tree already rearranged for 'medic-core'; skipping" >&2
  exit 0
fi

cd "$base_dir/incoming" &&
\
echo -n "Renaming directories... " >&2 &&
  rename && echo 'done.' >&2 &&
echo -n "Removing compressed files... " >&2 &&
  remove && echo 'done.' >&2 &&
echo -n "Creating symbolic links... " >&2 &&
  symlink && echo 'done.' >&2 &&
echo -n "Applying patches... " >&2 &&
  apply_patches && echo 'done.' >&2 &&
\
touch "$finished_path"

